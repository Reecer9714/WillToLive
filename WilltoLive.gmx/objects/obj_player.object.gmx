<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_survivor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_survivor_dive</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
image_index = 0
spritewalkspeed = 0.5
tarSpeed = 0;
image_speed = spritewalkspeed
crafting = false
used = false;
swim = false
reach = 50
maxHP = 1000;
hp = maxHP;
hunger = 0
thirst = 0
breath = 300
sick = false

inventory = instance_create(0,0,obj_inventory);
addItem(obj_survivalguide, inventory);

placing = false;
hitting = false;
hitIndex = 0;

getInput()

alarm[0] = room_speed * 30
alarm[1] = room_speed * 32
//instance_create(0,0,obj_inventory)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unstuck from Rock
if(position_meeting(x,y,obj_boulder)){
    var rock = instance_position(x,y,obj_boulder);
    instance_destroy(rock, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Healed
sick = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hunger and thirst
hunger += 1
thirst += 1.5

hunger = clamp(hunger,0,200)
thirst = clamp(thirst,0,200)

alarm[0] = room_speed * 2.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///getInput()
getInput()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement &amp;&amp; Rotation
if scr_tile_meeting(x,y,"water"){
    swim = true
}else{
    swim = false
}


if(swim &amp;&amp; dive){
    tarSpeed = 1
    sprite_index = spr_survivor_dive
    image_speed = 0.5
    ran = irandom(100)
    //Find Rocks
    if ran == 0{
        addItem(obj_rock)
    }
    //Running Out of Breath Effect
    if breath &lt;= 100{
        part_particles_create(global.ef_breath,x,y,global.bubble,1)
    }else{
        effect_clear()
    }
    //Running Out of Breath
    if breath &gt; 0{
        breath-=1
    }
    //Dying Out of Breath
    else if breath &lt;= 0{
        hp -=5
    }
}else if(swim &amp;&amp; !dive){
    //Regain Breath
    tarSpeed = 2
    sprite_index = spr_survivor_swim
    image_speed = 0.5
}

if((!dive || !swim) &amp;&amp; breath != 300){ breath++ }

if forward{
    if swim {
        if !audio_is_playing(s_swim){
            audio_play_sound(s_swim,1,false)
            audio_sound_gain(s_swim,0.5,8 * room_speed)
        }
    }else{
        tarSpeed = 4
        sprite_index = spr_survivor
        image_speed = spritewalkspeed
        if audio_is_playing(s_swim){
            audio_stop_sound(s_swim)
        }
    }
}else
if back{
    if swim {
        tarSpeed = -1
        sprite_index = spr_survivor_swim
        image_speed = -0.5
        if !audio_is_playing(s_swim){
            audio_play_sound(s_swim,1,false)
        }
    }else{
        tarSpeed = -2
        sprite_index = spr_survivor
        image_speed = spritewalkspeed-0.2
    }
}else{
    tarSpeed = 0
    image_speed = 0
    image_index = 0
    if audio_is_playing(s_swim){
        audio_stop_sound(s_swim)
    }
}

//Strafe
/*
if keyboard_check(ord('A')){
    x-=lengthdir_x(speed,direction-90)
    y-=lengthdir_y(speed,direction-90)
}
if keyboard_check(ord('D')){
    x-=lengthdir_x(speed,direction+90)
    y-=lengthdir_y(speed,direction+90)
}
*/

speed += sign(tarSpeed - speed) * min(abs(tarSpeed - speed) ,0.36) * global.delta;

if(global.pause || global.guideOpen)speed=0;

dir = pointDir
smooth_rotate(20)

//audio_listener_orientation(xt,yt,0, 0,0,1)
audio_listener_position(x, y, 0);
cameraFollow(view_current, self);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crafting and Placing and Using
if craft{
    if crafting = false{
        instance_create(mouse_x,mouse_y,obj_crafting)
        crafting = true
    }else if crafting = true{
        crafting = false
        with(obj_crafting) instance_destroy()
    }
}

//Drop
if drop &amp;&amp; getInventorySelected(inventory) &gt;= 0 &amp;&amp; getInventorySelectedNumber(inventory) &gt; 0 
&amp;&amp; place_free(mouse_x,mouse_y) &amp;&amp; !global.pause &amp;&amp; !global.guideOpen{
    instance_create(mouse_x,mouse_y,getObject(getInventorySelected(inventory)));
    if(getInventorySelectedNumber(inventory) &gt; 1){
        inventory.items[obj_inventory.selected,1]--;
    }else{
        inventory.items[obj_inventory.selected,1] = 0;
        inventory.items[obj_inventory.selected,0] = 0;
    }
}

useObject()


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hunger, Thirst, HP Update
if(hunger &gt; 180){
    hp--;
}

if(thirst &gt; 180){
    hp--;
}

hp = clamp(hp,-1,maxHP);
hunger = clamp(hunger,0,200);
thirst = clamp(thirst,0,200);

if(hp &lt; 0){
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///View Culling(Not In)
//instance_deactivate_region(view_xview[0] - view_wview, view_yview[0] - view_hview, view_wview*3, view_hview*3, false, true);
//instance_activate_region(view_xview[0] - view_wview, view_yview[0] - view_hview, view_wview*3, view_hview*3, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
with(other){
    image_alpha = 0.5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boulder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide and slide
/*
dirToOther = point_direction(x,y,other.x,other.y);
//move_outside_solid(dirToOther-180,speed)
disToOther = point_distance(x,y,other.x,other.y);
xoff = lengthdir_x(1,dirToOther-90)// - lengthdir_x(disToOther, dirToOther);
yoff = lengthdir_y(1,dirToOther-90)// - lengthdir_y(disToOther, dirToOther);
//var newDir = dirToOther-90;//arctan2(y,x);
move_towards_point(x+xoff,y+yoff,2)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bed">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hitting = false;
hitIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hitting = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hunger and Thirst Icons
draw_sprite(spr_hunger,9-floor((hunger/180)*9), display_get_gui_width()-24, display_get_gui_height()-24)
draw_sprite(spr_thirst,9-floor((thirst/180)*9), display_get_gui_width()-24, display_get_gui_height()-75)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_bobber){
    draw_line(x,y,obj_bobber.x,obj_bobber.y)
}

if(hitting){
    draw_sprite_ext(spr_hit, hitIndex, x,y,1,1,direction,c_white,1);
    hitIndex+= (hitIndex + 1) mod 3
}



if global.debug = true{
    draw_circle(x,y,reach+50,true)
    //draw_line(x,y,x+xoff*3,y+yoff*3);
    //draw_line(x,y,x+lengthdir_x(disToOther,dirToOther-100),y+lengthdir_y(disToOther,dirToOther-100))
    draw_text(x,y+16,"Hunger: "+string(hunger))
    draw_text(x,y+32,"Thirst: "+string(thirst))
    draw_text(x,y+48,"Health: "+string(hp))
    draw_text(x,y+60,"Breath: "+string(breath))
}

draw_self()


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
