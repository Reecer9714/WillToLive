<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Globals
global.timeScale = 0.01
global.debug = false
global.weather = "clear"
global.pause = false;
global.guideOpen = false;
global.delta = 0;
oldDelta = delta_time;

global.islandGenerated = false
genComplete = 0
sub = 0
surf = surface_create(view_wport[0],view_hport[0]);
surfScale = 1/8;

///Day/Night &amp;&amp; Lights
global.dayTime = room_speed * 90;
global.day = 0
instance_create(0,0,obj_time)

audio_set_master_gain(0,0.5)

//Weather
alarm[0] = 85 * room_speed
alarm[1] = 30
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Indexes
enum itemIndex{
    inone,
    itorch,
    icampfire,
    iwood,
    ileaves,
    irock,
    icoal,
    ibed,
    icoconut,
    irope,
    ifishingrod,
    irawfish,
    icookedfish,
    inet,
    iberry,
    icup,
    icupfilled,
    icupboiled,
    irawcrab,
    icookedcrab,
    iraincatcher,
    isurvivalbook,
    inet_drag,
    icampfire_drag,
    ibed_drag,
    iraincatcher_drag
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Recipes
show_debug_message("Populating Recipes");
global.recipes = ds_list_create();
global.recipesName = ds_list_create();
//(recipe, "what it makes")
createRecipe(createArray(-1,-1,-1,obj_coal,-1,-1,obj_wood,-1,-1), "torch")
createRecipe(createArray(-1,-1,-1,-1,obj_coal,-1,-1,obj_wood,-1), "torch")
createRecipe(createArray(-1,-1,-1,-1,-1,obj_coal,-1,-1,obj_wood), "torch")
createRecipe(createArray(obj_coal,-1,-1,obj_wood,-1,-1,-1,-1,-1), "torch")
createRecipe(createArray(-1,obj_coal,-1,-1,obj_wood,-1,-1,-1,-1), "torch")
createRecipe(createArray(-1,-1,obj_coal,-1,-1,obj_wood,-1,-1,-1), "torch")
createRecipe(createArray(-1,-1,-1,obj_rock,-1,obj_rock,-1,obj_rock,-1), "cup")
createRecipe(createArray(-1,-1,-1,obj_leaves,obj_leaves,obj_leaves,obj_wood,obj_wood,obj_wood), "bed")
createRecipe(createArray(obj_leaves,obj_leaves,obj_leaves,obj_wood,obj_wood,obj_wood,-1,-1,-1), "bed")
createRecipe(createArray(obj_leaves,-1,-1,obj_leaves,-1,-1,obj_leaves,-1,-1), "rope")
createRecipe(createArray(obj_leaves,obj_leaves,obj_leaves,-1,-1,-1,-1,-1,-1), "rope")
createRecipe(createArray(obj_leaves,-1,-1,-1,obj_leaves,-1,-1,-1,obj_leaves), "rope")
createRecipe(createArray(-1,obj_leaves,-1,-1,obj_leaves,-1,-1,obj_leaves,-1), "rope")
createRecipe(createArray(-1,-1,-1,obj_leaves,obj_leaves,obj_leaves,-1,-1,-1), "rope")
createRecipe(createArray(-1,-1,obj_leaves,-1,obj_leaves,-1,obj_leaves,-1,-1), "rope")
createRecipe(createArray(-1,-1,obj_leaves,-1,-1,obj_leaves,-1,-1,obj_leaves), "rope")
createRecipe(createArray(-1,-1,-1,-1,-1,-1,obj_leaves,obj_leaves,obj_leaves), "rope")
createRecipe(createArray(obj_wood,obj_rope,obj_wood,obj_wood,obj_rope,obj_wood,obj_wood,obj_rope,obj_wood), "net")
createRecipe(createArray(-1,-1,obj_wood,-1,obj_wood,obj_rope,obj_wood,-1,obj_rope), "fishingrod")
createRecipe(createArray(obj_wood,-1,-1,obj_rope,obj_wood,-1,obj_rope,-1,obj_wood), "fishingrod")
createRecipe(createArray(-1,obj_wood,-1,-1,obj_wood,-1,obj_rock,obj_rock,obj_rock), "campfire")
createRecipe(createArray(obj_leaves,obj_leaves,obj_leaves,obj_wood,obj_rope,obj_wood,-1,obj_wood,-1), "raincatcher")

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Island Generation
//randomize()
global.tileSize = 32;
global.tileCount = 0;
global.tileGoal = 100*100;

show_debug_message("Generating Island");
scr_create_terrain(100,100)

instance_create(room_width/2,room_height/2,obj_player)
global.elevation = -1

//Zoom in
targetWidth = 640
targetHeight = 360
startWidth = room_width
startHeight = room_height
view_wview[0] = startWidth
view_hview[0] = startHeight
rate = 0.01
zoom = false

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Up Particle Systems
global.ef_breath = part_system_create()

global.bubble = part_type_create();
part_type_shape(global.bubble,pt_shape_ring);
part_type_size(global.bubble,0.01,0.05,0.01,0);
part_type_scale(global.bubble,1,1);
part_type_color1(global.bubble,16777088);
part_type_alpha1(global.bubble,0.50);
part_type_speed(global.bubble,1,1.50,0,0);
part_type_direction(global.bubble,0,359,0.10,0);
part_type_gravity(global.bubble,0,270);
part_type_orientation(global.bubble,0,0,0,0,1);
part_type_blend(global.bubble,0);
part_type_life(global.bubble,20,25);

//Campfires
global.ef_fire = part_system_create()

global.flame = part_type_create()
part_type_shape(global.flame,pt_shape_line)
part_type_size(global.flame,0.20,0.60,-0.01,0)
part_type_scale(global.flame,0.65,2.50)
part_type_color2(global.flame,33023,255)//,16749459
part_type_alpha3(global.flame,0.04,0.06,0.07)
part_type_speed(global.flame,0.70,2.60,-0.02,0)
part_type_direction(global.flame,85,95,0,9)
part_type_gravity(global.flame,0,270)
part_type_orientation(global.flame,0,0,10,20,1)
part_type_blend(global.flame,1)
part_type_life(global.flame,30,40)

//Rain
/*
global.ef_raining = part_system_create()

global.rain = part_type_create();
part_type_shape(global.rain,pt_shape_disk);
part_type_size(global.rain,0.10,0.10,0,0);
part_type_scale(global.rain,1.75,1);
part_type_color1(global.rain,16771494);
part_type_alpha1(global.rain,0.75);
part_type_speed(global.rain,1,1,0,0);
part_type_direction(global.rain,180,359,0,0);
part_type_gravity(global.rain,0.20,270);
part_type_orientation(global.rain,0,0,0,0,1);
part_type_blend(global.rain,0);
part_type_life(global.rain,90,90);

global.em_rain = part_emitter_create(global.ef_raining);
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animal Spawn
//Birds
if(instance_number(obj_bird)&lt; 6){
    var xLimiter = room_width*0.2;
    var yLimiter = room_height*0.2;
    instance_create(irandom_range(xLimiter,room_width-xLimiter),
                    irandom_range(yLimiter,room_height-yLimiter),
                    obj_bird);
}

///Fish
if instance_number(obj_fish) &lt; 30{
    var water = instance_random(obj_water);
    instance_create(water.x+16,water.y+16,obj_fish);
}

//Sharks
if(instance_number(obj_shark) &lt; 3){
    var water = instance_random(obj_water);
    var near = instance_nearest(water.x,water.y, obj_sand);
    while(point_distance(water.x,water.y,near.x,near.y)&lt;4*32){
        sand = instance_random(obj_sand);
        near = instance_nearest(sand.x,sand.y, obj_water);
    }
    instance_create(water.x+16,water.y+16,obj_shark);
}

//Crabs
if(instance_number(obj_crab) &lt; 6){
    var sand = instance_random(obj_sand);
    var near = instance_nearest(sand.x,sand.y, obj_water);
    while(point_distance(sand.x,sand.y,near.x,near.y)&gt;4*32){
        sand = instance_random(obj_sand);
        near = instance_nearest(sand.x,sand.y, obj_water);
    }
    instance_create(sand.x+16,sand.y+16,obj_crab);
}

alarm[1] = room_speed * 5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weather switching
ran = irandom(3)

if ran == 0 {
    if global.weather == "clear"{
        global.weather = "rain"
    }else{
        global.weather = "clear"
    }
}

if global.weather == "rain" {
    //effect_create_above(ef_rain,view_xview[0],view_yview[0],2,c_navy)
    if !audio_is_playing(s_rain){
        audio_play_sound(s_rain,1,true)
        //audio_sound_gain(s_rain,0,0)
        audio_sound_gain(s_rain,0.5,15 * room_speed)
    } 
    instance_create(0,0,obj_rain_generator);
}else{
    //effect_clear()
    if audio_sound_get_gain(s_rain) == 0 {
        audio_stop_sound(s_rain)
    }else{
        audio_sound_gain(s_rain,0,8 * room_speed)
    } 
    with(obj_rain_generator){
        instance_destroy();
    }
}

alarm[0] = 30 * room_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug Modes
global.delta = oldDelta/delta_time;
oldDelta = delta_time;

if(instance_exists(obj_player)){
    x = obj_player.x;
    y = obj_player.y;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial Zoom
if(!zoom){
    view_wview[0] = lerp(startWidth,targetWidth,rate);
    view_hview[0] = lerp(startHeight,targetHeight,rate);
    
    var offX = startWidth - view_wview[0];
    var offY = startHeight - view_hview[0];
    
    view_xview[0]= offX/2;
    view_yview[0]= offY/2;

    rate+=0.01;
    if(rate&gt;=1){
        zoom = true
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clouds
if !irandom(9){
    effect_create_above(ef_cloud, random(room_width), random(room_height), choose(0, 1, 2), c_white);
}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all()
part_system_destroy(global.ef_breath)
part_system_destroy(global.ef_fire)

/*
for(xx=0; xx&lt;10; xx++){
    for(yy=0; yy&lt;10; yy++){
        var chunk = global.chunkmap[xx, yy];
        ds_grid_destroy(chunk);
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(part_system_exists(global.ef_fire)){
part_system_destroy(global.ef_fire)
part_emitter_destroy_all(global.ef_fire)
}

if(part_system_exists(global.ef_breath)){
part_system_destroy(global.ef_breath)
}

surface_free(surf)

ds_list_destroy(global.recipes);
ds_list_destroy(global.recipesName);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
//draw_set_font(fn_shadow)
draw_set_colour(c_black)

if global.debug = true{
    draw_text(view_xview[0],view_yview[0],"Time " + string(global.time))
    draw_text(view_xview[0],view_yview[0]+15,"Weather: " + global.weather)
    draw_text(view_xview[0],view_yview[0]+30,"Bird: " + string(instance_number(obj_bird)))
    draw_text(view_xview[0],view_yview[0]+45,"Days: " + string(global.day))
    draw_text(view_xview[0]+view_wview[0]-128,view_yview[0]+view_hview[0]-15,"Debug Vision")
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loading Screen

if !instance_exists(obj_player){
    draw_background_stretched(bk_load,view_xview[0],view_yview[0],view_wview[0],view_hview[0])
    draw_set_color(c_red)
    draw_text(view_wview[0]/2,view_hview[0]/2 + 28,string(global.tileCount/global.tileGoal)+"%")
    draw_healthbar(view_wview[0]/2 - 500,view_hview[0]/2 - 16,view_wview[0]/2 + 500,view_hview[0]/2 + 16,global.tileCount/global.tileGoal,c_red,c_red,c_red,0,false,false)
    draw_set_color(c_black)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Status Effects
if instance_exists(obj_player){
    if obj_player.hp &lt; 750 &amp;&amp; obj_player.hp &gt; 0 {
        draw_sprite_stretched_ext(spr_health,0,view_xview[0],view_yview[0],view_wview[0],view_hview[0],c_white,1-(obj_player.hp/1000))
        //draw_sprite_ext(spr_health,0,view_xview[0],view_yview[0],1,1,0,c_white,1-(1-(1000/obj_player.hp)*0.5))
    }
    if obj_player.hunger &gt;= 140 {
        transparency = 1-(obj_player.hunger/90)
        draw_sprite_stretched_ext(spr_dizzy,sub,view_xview[0],view_yview[0],view_wview[0],view_hview[0],c_white,clamp(transparency,0.3,1))
        //draw_sprite_ext(spr_dizzy,sub,view_xview[0],view_yview[0],1,1,0,c_white,clamp(transparency,0.1,1))
        if sub == 9{
            sub = 0
        }else{
            sub++
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weather
if(global.weather == "rain"){
    if surface_exists(surf){
        surface_set_target(surf);
        //random flash of lightning
        var color = c_black;
        if(random(room_speed)&lt;=0.1) color = c_dkgray
        draw_rectangle_colour(0,0,room_width,room_height,color,color,color,color,false);
        surface_reset_target()
        draw_surface_ext(surf,view_xview[0],view_yview[0],1/surfScale,1/surfScale,0,c_white,0.3)
    }else{
        surf = surface_create(room_width,room_height);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fullscreen
if window_get_fullscreen(){
    window_set_fullscreen(false);
}else{
    window_set_fullscreen(true);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="89">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle Debug Mode
global.debug = !global.debug;
show_debug_overlay(global.debug);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Pause &amp;&amp; Exit book
if(!global.guideOpen &amp;&amp; !global.pause){
    instance_create(x,y,obj_pause);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
