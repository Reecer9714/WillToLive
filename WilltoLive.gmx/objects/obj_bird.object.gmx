<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bird</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
image_blend = choose(c_aqua,c_blue,c_red,c_yellow,c_gray)

height = 0
targetHeight = 0;
eating = false
scared = 0
hunger = 0
alarm[1]=30
trapped = false
range = 48 + irandom(48)
spd = choose(0,0.5,1);
dir = irandom(359)

enum states{
    idle,
    flying,
    scared,
    eating,
    landing,
    takeoff
}
//Change Movement
alarm[0] = 5 + irandom(10) * room_speed

//Change Direction/speed
alarm[2]=30+irandom(20)
alarm[3]=30+irandom(20)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scared
scared--;

if(scared != 0){
    alarm[5] = room_speed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speed Change

spd = choose(0,0.5,1)
motion_set(dir,spd)
alarm[2]=30+irandom(30)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Direction Change

dir = irandom(359)
motion_set(dir,spd)
alarm[1]=30+irandom(20)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hunger
hunger++
alarm[1]=60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TakeOff or Land
if !eating {
    
    if irandom(5) == 0{
        if height &gt; 0{
            land = instance_nearest(x,y,obj_grass)
            move_towards_object(land, 1)
            if place_meeting(x,y,land){
                targetHeight = 0
                motion_set(dir,0)
            }
        }else{
            targetHeight = 1;
            motion_set(dir,1)
        }
    }
}

//Reset timer based on flying or not
if height &gt; 0{
    alarm[0] = 5 + irandom(10) * room_speed   
}else{
    alarm[0] = 5 + irandom(5) * room_speed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bird AI

if(place_meeting(x,y,obj_water)){
    targetHeight = 1;
}

if(height &lt; 0.1 &amp;&amp; distance_to_object(obj_boulder) &lt; 4){
    var near = instance_nearest(x,y,obj_boulder)
    var moddir = point_direction(near.x,near.y,x,y);
    dir = lerp(dir, moddir, 0.6);
}

//Scared
if distance_to_object(obj_player) &lt;= range &amp;&amp; height &lt; 1{
    scared = 10;
    alarm[5] = room_speed
    var moddir = point_direction(obj_player.x,obj_player.y,x,y);
    dir = lerp(dir, moddir, 0.6);
    speed = 1.5
    targetHeight = 1
}

//Eating
if (hunger &gt;= 15 &amp;&amp; scared &lt;= 0){
    eating = true
    if(position_meeting(x,y,obj_water)){
        land = instance_nearest(x,y,obj_grass)
        move_towards_object(land,1)
    }else if (collision_circle(x,y,range*5,obj_berry,false,true)){
        berry = instance_nearest(x,y,obj_berry)
        move_towards_object(berry,1)
        targetHeight = 0;
        if place_meeting(x,y,berry){
            hunger -= 15;
            eating = false;
            spd = 0;
            with(berry){
                instance_destroy()
            }
        }
    }   
}

if height &gt; 0{
    image_index = 0
    depth = -6
    if(spd &lt; 1) spd = 1;
    //motion_set(dir,spd)
}else{
    image_index = 1
    depth = -1
}

update_motion();
smooth_rotate(15);
//This should smooth the motion
speed *= global.delta
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get to target Height
if(height &lt; targetHeight){
    height += 0.05
}

if(height &gt; targetHeight){
    height -= 0.05
}

image_xscale = height + 1
image_yscale = image_xscale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="1">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if global.debug {
    draw_text(x+5,y+5,string(scared))
    draw_text(x+5,y+20,string(hunger))
    draw_circle(x,y,range,true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
