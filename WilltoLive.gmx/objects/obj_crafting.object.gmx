<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_craft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
recipeName = ""

offsetSize = global.tileSize * 0.2;
largeSize = global.tileSize;

/*
if !place_snapped(global.tileSize,global.tileSize){
    move_snap(global.tileSize,global.tileSize)
}
*/
//var left_up,up,right_up,left,center,right,left_down,down,right_down;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checking each box for item

//[0][1][2]
//[3][4][5]
//[6][7][8]
//[0,1,2,3,4,5,6,7,8]

var index = 8;
for(var i = 1; i &gt;= -1; i--){
    for(var j = 1; j &gt;= -1; j--){
        var cenX = x+largeSize*j;
        var cenY = y+largeSize*i;
        craft[index] = collision_rectangle(cenX-offsetSize, cenY-offsetSize, cenX+offsetSize, cenY+offsetSize,obj_draggable,false,true);
        index--;
    }
}

for(var i = 8; i &gt;= 0; i--){
    if(craft[i] &lt; 0) currentRecipe[i] = -1 else currentRecipe[i] = craft[i].object_index;
}

recipeName = checkRecipe(currentRecipe)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Visual change to represent a valid recipe
if recipeName != "" {
    image_index = 1
}else{
    image_index = 0
}

if(instance_exists(obj_player) &amp;&amp; distance_to_object(obj_player) &gt; obj_player.reach){
    obj_player.crafting = false;
    instance_destroy();
}

if keyboard_check_pressed(ord('E')) &amp;&amp; recipeName != "" {
    switch(recipeName){
        case "torch": addItem(obj_torch) break;
        case "campfire": addItem(obj_campfire_drag) break;
        case "bed": addItem(obj_bed_drag) break;
        case "rope": addItem(obj_rope) break;
        case "fishingrod": addItem(obj_fishingrod) break;
        case "net": addItem(obj_net_drag) break;
        case "cup": addItem(obj_cup) break;
        case "raincatcher": addItem(obj_raincatcher_drag) break;
    }
    
    for(i = 0; i &lt; array_length_1d(currentRecipe); i++){
        if(currentRecipe[i] &gt; 0){
            
            with(craft[i]){
                instance_destroy();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if(global.debug){

for(var i = 1; i &gt;= -1; i--){
    for(var j = 1; j &gt;= -1; j--){
        var cenX = x+largeSize*j;
        var cenY = y+largeSize*i;
        draw_rectangle(cenX-offsetSize, cenY-offsetSize, cenX+offsetSize, cenY+offsetSize,true);
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
